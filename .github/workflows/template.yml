name: Apply Individual YAML Files to Repos

on:
  workflow_dispatch:  # Allows you to trigger the workflow manually

jobs:
  apply-yaml-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v2
  
      - name: Set up Git
        run: |
          git config --global user.name "vijayakumari2"
          git config --global user.email "vijayakumariarilli@gmail.com"
          echo "GT_TOKEN=${{ secrets.GT_TOKEN }}" >> $GITHUB_ENV


      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh

      - name: Apply YAML Files to All Repos
        env:
        GH_TOKEN: ${{ secrets.GT_TOKEN }}
        run: |
          TEMPLATE_REPO="vijayakumari2/codeql-workflow-template"
          WORKFLOW_DIR=".github/workflows"
          TEMPLATE_WORKFLOW_DIR="template-repo/$WORKFLOW_DIR"
          REPOS=$(gh repo list vijayakumari2 --json name -q '.[].name')
      
          # Clone the template repository to a local directory
          gh repo clone $TEMPLATE_REPO template-repo
      
          for REPO in $REPOS; do
              echo "Processing $REPO..."
      
              if [ "$REPO" != "${TEMPLATE_REPO#*/}" ]; then  # Skip the template repository itself
                  # Clone the target repository
                  gh repo clone vijayakumari2/$REPO
                  
                  # Check if the template directory and workflow directory exist
                  if [ -d "$TEMPLATE_WORKFLOW_DIR" ]; then
                          FILE_NAME="codeql-analysis.yml"
                          TARGET_YAML="$REPO/$WORKFLOW_DIR/$FILE_NAME"
                          SOURCE_YAML="$TEMPLATE_WORKFLOW_DIR/$FILE_NAME"
      
                          # Copy the YAML file to the target repository's workflow directory if it's different
                          if ! cmp -s "$SOURCE_YAML" "$TARGET_YAML"; then
                              cp $SOURCE_YAML $TARGET_YAML
                              echo "Overwriting existing $FILE_NAME in $REPO"
      
                              cd $REPO
                              if ! git diff --quiet; then
                                  git add $WORKFLOW_DIR
                                  git commit -m "Add or update workflows from $TEMPLATE_REPO"
                                  git push origin main
                              else
                                  echo "No changes to commit in $REPO"
                              fi
                              cd ..
                          else
                              echo "$FILE_NAME in $REPO is already up to date"
                          fi
                  else
                      echo "Template repository or workflow directory not found."
                  fi
                  
                  # Clean up the cloned repository
                  rm -rf $REPO
              else
                  echo "Skipping template repository $REPO"
              fi
          done

          # Clean up the template repository
          rm -rf template-repo
